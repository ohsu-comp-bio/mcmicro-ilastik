<tool id="mcmicro-ilastik" name="Mcmicro Ilastik" version="1.1.0.0">
    <description>Preparation and processing of ome.tif images with Ilastik</description>

    <requirements>
        <requirement type="package">mcmicro-ilastik</requirement>
    </requirements>

    <command detect_errors="exit_code"><![CDATA[

        #if $mode.mode_selector == "train"
            
            ln -s $mode.input ${mode.input.element_name}_ome.tiff

            python ${tool_dir}/CommandIlastikPrepOME.py 
                --input ${mode.input.element_name}_ome.tiff 
                --output $output 
                --num_channels $mode.num_channels
                --output working

            #if $mode.ring_mask
                --ring_mask
            #end if

            #if $mode.crop_amount
                --crop_amount $mode.crop_amount
            #end if

        #else if $mode.mode_selector == "apply"
            run_ilastik.sh --headless 
                --project=$project 
                $hdf5_image

            #if $mode.debug
                --debug
            #end if

        #end if

    ]]></command>

    <inputs>
        <conditional name="mode">
            <param type="select" name="mode_selector" label="Mode" help="Train or Apply classifier.">
                <option value="train">Train Classifier</option>
                <option value="apply">Apply Classifier with Ilastik</option>
            </param>
            <when value="train">
                <param type="data" name="input" multiple="true" format="tiff" help="Input images" />
                <param type="integer" name="num_channels" label="Number of Channels" help="Number of channels to export per image (Ex: 40 corresponds to a 40 channel ome.tif image)" />

                <param type="float" optional="True" name="nonzero_fraction" format="" label="Nonzero Fraction" help="Indicates fraction of pixels per crop above global threshold to ensure"/>
                <param type="integer" name="nuclei_index" format="" />
                <param type="boolean" name="ring_mask" checked="false" label="Ring Mask" help="Include if you have a ring mask in the same directory to use for reducing size of hdf5 image. do not include if not" />
                <param type="integer" name="crop_amount" label="Crop Amount" help="Number of crops you would like to extract." />
            </when>
            <when value="apply">
                <param type="data" name="project" format=""  label="Project" help="A project file to open on startup." />
                <param type="data" name="hdf5_image" format="hdf5" label="Project" help="A project file to open on startup."/>
                <param type="boolean" name="debug" checked="False" label="Debug Mode" help="Start ilastik in debug mode."/>
            </when>
        </conditional>
    </inputs>

    <outputs>
        <data name="hdf5_image_output">
            <discover_datasets pattern="__designation_and_ext__" ext="hdf5" visible="true" />
        </data>
        <data name="crop_summary">
            <discover_datasets pattern="(?P&lt;designation&gt;.+)_CropSummary\.txt" ext="txt" visible="true" />
            <filter>mode.crop_amount</filter>
        </data>
    </outputs>

    <help><![CDATA[
        TODO: Fill in help.
    ]]></help>

</tool>
